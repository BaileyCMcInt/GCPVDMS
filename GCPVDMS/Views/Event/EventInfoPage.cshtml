@model SignedUpEventsViewModel
@{
    ViewBag.Title = "Event Information";
    Layout = "_Layout";
}
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<div class="container">

    <h1> @Model.Event.EventTitle</h1>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <p class="card-text">Location: @Model.Event.Location.LocationName</p>

                <p class="card-text">Event Date: @Model.Event.EventDate.ToShortDateString()</p>

                <p class="card-text">Start Time: @Model.Event.StartTime.ToShortTimeString()</p>

                <p class="card-text">End Time: @Model.Event.EndTime.ToShortTimeString()</p>

                <p class="card-text">Number of Volunteers Needed: @Model.Event.NumVolunteersNeeded</p>

                <p class="card-text">Event Description: @Model.Event.EventDescription</p>

            </div>
            <div>
                <h4> Point of Contact</h4>
                <p class="card-text">Name: @Model.Event.POCName</p>

                <p class="card-text">Phone Number: @Model.Event.POCPhone</p>

                <p class="card-text">Email: @Model.Event.POCEmail</p>


                <br />
                @*<asp:Button ID="Button1" runat="server" Text="Button" OnClientClick="return confirm('Are you sure?')" /> *@
                @if (SignInManager.IsSignedIn(User))
                {

                    var userId = UserManager.GetUserId(User);
                    <form asp-action="ConfirmationPage" method="post">
                        <input type="hidden" asp-for="@Model.EventRegistration.UserId" value="@userId" readonly>
                        <input type="hidden" asp-for="@Model.EventRegistration.EventID" value="@Model.Event.EventID" readonly />
                        @if (Model.Event.NumVolunteersNeeded <= 0)
                        {
                            <p style="color:red;">Sign-up unavailable. This event is full.</p>
                            <button name="eventId" disabled value="@Model.Event.EventID" class="btn btn-outline-dark">
                                Sign-up
                            </button>
                        }
                        else
                        {
                            <button name="eventId" value="@Model.Event.EventID" class="btn btn-outline-dark">
                                Sign-up
                            </button>
                        }
                        <button asp-controller="Event" asp-action="EventSignUp" class="btn btn-outline-dark">Back to Events</button>
                    </form>
                }
                else
                {
                    <p>You need a volunteer account in order to volunteer at an event.</p>
                    <a id="login" asp-area="Identity" asp-page="/Account/Login">Login to account</a>
                    <br />
                    <a id="register" asp-area="Identity" asp-page="/Account/Register">Create an account</a>
                }

            </div>
        </div>
    </div>
</div>
<br/>
<h5 style="color:red">@ViewBag.ErrorMessage</h5>
@*onclick="return confirm('Are you sure you want to sign up?')"
    I commented this out because I didn't want to mess with it before adding viewmodels*@
