@inject UserManager<ApplicationUser> UserManager
@model CreateEventViewModel

@{
    ViewBag.Title = "Event Info";
    Layout = "_Layout";
}

<html>

<body>
    <partial name="_GlobalEventTabs" />
    <br />
    <center><h3 style="background-color: #D4EDDA;">@Model.Event.EventTitle</h3></center>

    <div class="container">
        <div>
            <div class="row">
                <div class="col-md-5">
                    <br />
                    <h4>Opportunity Information</h4>
                    <br />
                    <p class="card-text"><b>Location:</b> @Model.Event.Location.LocationName</p>

                    @{ 
                        var spotsOpen = Model.Event.NumVolunteersNeeded - Model.Event.NumVolunteersSignedUp;
                    }

                    <p class="card-text"><b>Number of Volunteer Spots Open:</b> @spotsOpen / @Model.Event.NumVolunteersNeeded</p>

                    <p class="card-text"><b>Description:</b> @Model.Event.EventDescription</p>

                    <p class="card-text">
                        <b>Tasks:</b>

                        @for (Int32 i = 0; i < this.Model.GCPEventTasks.Count; i++)
                        {
                            <label>@Model.GCPEventTasks[i].GCPTask.TaskName</label>
                            <input type="hidden" asp-for="@Model.GCPEventTasks[i].GCPTaskID" />
                            <br />
                        }

                    </p>

                </div>
                <div class="col-md-3">
                    <br />
                    <h4>Date and Time</h4>
                    <br />
                    <p class="card-text"><b>Date:</b> @Model.Event.EventDate.ToShortDateString()</p>

                    <p class="card-text"><b>Start Time:</b> @Model.Event.StartTime.ToShortTimeString()</p>

                    <p class="card-text"><b>End Time:</b> @Model.Event.EndTime.ToShortTimeString()</p>
                    <p class="card-text">
                        <b>Disclaimers:</b>

                        @for (Int32 i = 0; i < this.Model.GCPEventDisclaimers.Count; i++)
                        {
                            <label>@Model.GCPEventDisclaimers[i].Disclaimer.DisclaimerDesc</label>
                            <input type="hidden" asp-for="@Model.GCPEventDisclaimers[i].GCPEventDisclaimerID" />
                            <br />
                        }
                    </p>
                </div>
                <div class="col-md-4">
                    <br />
                    <h4> Point of Contact </h4>
                    <br />
                    <p class="card-text"><b>Name:</b> @Model.Event.POCName</p>

                    <p class="card-text"><b>Phone Number:</b> @Model.Event.POCPhone</p>

                    <p class="card-text"><b>Email:</b> @Model.Event.POCEmail</p>
                    <br />
                </div>
                <div class="col-md-4">
                    <br />
                    <h4> Registered Volunteers </h4>
                    <br />

                    @foreach (var regUser in Model.EventRegistrations)
                    {
                        @foreach (var user in Model.Users)
                        {
                            if (user.Id == regUser.UserId)
                            {
                                <p><a type="submit"  asp-action="VolunteerInfo" asp-route-id="@user.Id">@user.FirstName @user.LastName - @user.VolunteerType</a></p>
                              
                            }
                        }
                    }

                    <br />

                </div>
            </div>
        </div>
        <center>
            <div>
                <a asp-action="EventList" class="btn btn-outline-dark">Back To Opportunities</a>
                <a asp-action="EventForm" class="btn btn-outline-dark"
                   asp-route-eventId="@Model.Event.EventID">
                    Edit
                </a>
            </div>
        </center>
    </div>
</body>
</html>