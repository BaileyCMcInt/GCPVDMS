@model GCPVDMS.Models.GCPTaskDTO

@{
    ViewData["Title"] = "MasterTask";
}

<h1>MasterTask</h1>

<h4>GCPTask</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="MasterTask">
            <input type="hidden" asp-for="GCPTaskData.GCPTaskID" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<div class="form-group">
                <label asp-for="GCPTaskData.GCPTaskID" class="control-label"></label>
                <input asp-for="GCPTaskData.GCPTaskID" class="form-control" />
                <span asp-validation-for="GCPTaskData.GCPTaskID" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="GCPTaskData.TaskName" class="control-label"></label>
                <input asp-for="GCPTaskData.TaskName" class="form-control" />
                <span asp-validation-for="GCPTaskData.TaskName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<table border="1" id="tasktable">
    <thead>
        <tr>
            <th>Task Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GCPTaskList)
        {
            <tr>
                <td>@item.TaskName</td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
