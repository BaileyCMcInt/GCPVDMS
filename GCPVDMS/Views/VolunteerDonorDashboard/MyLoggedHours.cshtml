<!--This View page displays a table that shows the information from the Log My Hours form, as well as the status of the form.-->

@{
    Layout = "_Layout";
}
@model LogMyHoursViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@*Script for JavaScript DataTables*@
@section Scripts{

    <script>

        //var minDate, maxDate;

        //// Custom filtering function which will search data in column four between two values
        //$.fn.dataTable.ext.search.push(
        //    function (settings, data, dataIndex) {
        //        var min = minDate.val();
        //        var max = maxDate.val();
        //        var date = new Date(data[0]);
        //        console.log(date);
        //        if (
        //            (min === null && max === null) ||
        //            (min === null && date <= max) ||
        //            (min <= date && max === null) ||
        //            (min <= date && date <= max)
        //        ) {
        //            return true;
        //        }
        //        return false;
        //    }
        //);

        //$(document).ready(function () {
        //    // Create date inputs
        //    minDate = new DateTime($('#min'), {
        //        format: 'MMMM Do YYYY'
        //    });
        //    maxDate = new DateTime($('#max'), {
        //        format: 'MMMM Do YYYY'
        //    });

        //    // DataTables initialisation
        //    var table = $('#yourTable').DataTable();

        //    // Refilter the table
        //    $('#min, #max').on('change', function () {
        //        table.draw();
        //    });
        //});

       // $(document).ready(function () {
         //   $('#yourTable').DataTable();
        //});
        $(document).ready(function () {
            //$('#yourtable').DataTable();
            var table = $('#yourTable').DataTable();

          //  table;
            // Event listener to the two range filtering inputs to redraw on input
            $('#min, #max').change(function () {
                table.draw();
                printFormFilter();

            });
        });
        /* Custom filtering function which will search data in column four between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = Date.parse($('#min').val()) + 14400000;
                var max = Date.parse($('#max').val()) + 14400000;
                console.log("min is " + min);
                console.log("max is " + max);

                var date = Date.parse(data[0].toString()) || 0; // use data for the date column
                console.log(date);
                if ((isNaN(min) && isNaN(max)) || (isNaN(min) && date <= max) || (min <= date && isNaN(max)) || (min <= date && date <= max)) {
                    console.log("date is valid and = " + date);
                    return true;

                }
                return false;
            }
        );

        //print form filter function
        function printFormFilter() {
            var i;
            var min = Date.parse($('#min').val()) + 14400000;
            var max = Date.parse($('#max').val()) + 14400000;

            var printBody = document.getElementById("body").children
            for (i = 0; i < printBody.length; i++) {
                console.log("row " + i);
                var dateValue = Date.parse(printBody[i].children[0].innerHTML);
                console.log("min is " + min + " " + "max is " + max + " " + "DateVal is " + dateValue);

                //Delete row if date is out of user input range (min, max)
                if (dateValue < min || dateValue > max) {
                    printBody[i].style.display = "none";
                    console.log("row " + i + " " + "is out of range");
                } else {
                    printBody[i].style.display = "table-row";
                    console.log("row " + i + "is in range");
                }
            }
        }

    </script>
}

<partial name="_VolunteerHoursTab" /><!--This is the html tag for the navigation tabs-->
<html>
<body>



    <br />    <center><h3 style="background-color: #D4EDDA;">My Logged Hours</h3></center><br />
    <div style="text-align: center">
        <input type="button" class="btn btn-outline-dark" value="Print My Logged Volunteer Hours" onclick="printDiv('printableArea')" /><!--This button allows the user to see their logged hours on a printable pdf.-->
        <a asp-action="LogMyHours" class="btn btn-outline-dark">Log My Hours</a><!--This button redirects the user to the Log My Hours View page.-->
    </div>
    <br />
    <div style="text-align:center" class="d-flex justify-content-center">
        <div class="form-group; border" style="width: 50%">
            <b>Filter Your Hours by Date</b><br />
            <label>Start Date:</label>
            <input type="date" id="min" min="2020-01-01" max="2050-01-01" asp-for="VolunteerHour.volunteerHourDate" required>
            <label>End Date:</label>
            <input type="date" id="max" min="2020-01-01" max="2050-01-01" asp-for="VolunteerHour.volunteerHourDate" required>
        </div>
    </div>
    <br />
    <div>
        <table id="yourTable" class="table table-bordered table-striped display">
            <!--This table displays the information from the Log My Hours form.-->
            <thead style="width: 50px">
                <tr>
                    <th class="text-center">Date</th>
                    <th class="text-center">Event</th>
                    <th class="text-center">Hours/Minutes Worked</th>
                    <th class="text-center">Approval Status</th>
                </tr>
            </thead>
            <tbody >
                <!----This loop utilizes the ViewModel tagged in this page to retrieve logged hour data for a specific volunteer.-->
                @foreach (var item in Model.VolunteerHours)//loops through volunteerHour table data
                {
                    @if (SignInManager.IsSignedIn(User))//checks that user is Signed in
                    {
                        var user = UserManager.GetUserId(User);//get signed in user's UserID
                        if (user == item.UserId)//checks for event registration table UserID's that match the signed in user's UserId
                        {
                            <tr>
                                <td class="text-center">@item.Date.ToShortDateString()</td><!--Model.VolunteerHours.Date-->
                                <td class="text-center">@item.Event.EventTitle</td><!--Model.Event.EventTitle-->
                                <td class="text-center">@item.NumberOfHours.ToString("0.00")</td>
                                @if (item.isApproved == true && item.isDenied == false)
                                {

                                    <td class="text-center" style="color:green;">Approved</td>

                                }
                                @if (item.isApproved == false && item.isDenied == false)
                                {
                                    <td class="text-center">Pending</td>
                                }
                                @if (item.isDenied == true)
                                {

                                    <td class="text-center" style="color:red">Denied</td>

                                }
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
    <br />
    <br />
    <br />










    <!--PRINT AREA NOT SEEN BY USER NORMALLY-->
   

    <div style="display:none">
        <!--This div is hidden from the view of the user, it only acts as the information that will be displayed in the prontable pdf of the page.-->
        <div id="printableArea">

            <br />

            <p style="text-align:center"><img src="~/images/logo.png" height="200" width="200"></p><!--GCP logo-->

            <br />

            <h1 style="text-align:center">Volunteer Work Hours</h1>
            <div>
                <div>
                    <table id="yourTablePrint" class="table table-bordered table-striped display">
                        <!--This table displays the information from the Log My Hours form.-->
                        <thead style="width: 50px">
                            <tr>
                                <th class="text-center">Date</th>
                                <th class="text-center">Event</th>
                                <th class="text-center">Hours Worked</th>
                                <th style="display: none" class="text-center">Approval Status</th>
                            </tr>
                        </thead>
                        <tbody id="body">
                            <!----This loop utilizes the ViewModel tagged in this page to retrieve logged hour data for a specific volunteer.-->
                            @foreach (var item in Model.VolunteerHours)//loops through volunteerHour table data
                            {
                                @if (SignInManager.IsSignedIn(User))//checks that user is Signed in
                                {
                                    var user = UserManager.GetUserId(User);//get signed in user's UserID
                                    if (user == item.UserId)//checks for event registration table UserID's that match the signed in user's UserId
                                    {
                            <tr>
                                @if (item.isApproved == true && item.isDenied == false)
                                {
                                    <td class="text-center">@item.Date.ToShortDateString()</td><!--Model.VolunteerHours.Date-->
                                    <td class="text-center">@item.Event.EventTitle</td><!--Model.Event.EventTitle-->
                                    <td class="text-center">@item.NumberOfHours</td>

                                    <td style="display: none" class="text-center">Approved</td>
                                }
                                @*@if (item.isApproved == false && item.isDenied == false)
        {
            <td class="text-center">Pending</td>
        }*@
                                @if (item.isDenied == true)
                                {
                                    <td style="display: none" class="text-center">@item.Date.ToShortDateString()</td><!--Model.VolunteerHours.Date-->
                                    <td style="display: none" class="text-center">@item.Event.EventTitle</td><!--Model.Event.EventTitle-->
                                    <td style="display: none" class="text-center">@item.NumberOfHours</td>
                                    <td style="display: none" class="text-center">Denied</td>
                                }
                            </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <br />
                <br />

                <table>
                    <!--This table only acts as a format tool for the signature/date lines on the printable pdf.-->

                    <tr>
                        <td style="padding-right: 120px ; padding-left: 120px">
                            <div style="border-bottom:solid ;width:200px ;border-width:thin">
                                @if (SignInManager.IsSignedIn(User))
                                {//checks that user is Signed in
                                    var CurrentVolunteer = UserManager.FindByIdAsync(UserManager.GetUserId(User)).Result;
                                    @(CurrentVolunteer.FirstName + " " + CurrentVolunteer.LastName);
                                }
                            </div>

                        </td>
                        <td style="padding-right: 120px">____________________________________________</td>
                        <td style="padding-right: 120px">________________</td>
                    </tr>
                    <tr>
                        <td style="padding-left: 120px; padding-bottom: 50px">Print Volunteer Name</td>
                        <td style="padding-bottom: 50px">Volunteer Signature</td>
                        <td style="padding-bottom: 50px">Date</td>
                    </tr>
                    <tr>
                        <td style="padding-left: 120px"></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td style="padding-left: 120px"><div style="border-bottom:solid ;width:200px ;border-width:thin">Jennifer Smith</div>Print GCP Admin Name</td>
                        <td><img src="~/images/JenniferSignature6.png" /></td>
                        <td><div style="width:50%"><input type="text" style="width: 80%; border-left: none; border-right: none; border-top: none; border-bottom-width: thin" value="@DateTime.Now.ToString("MM/dd/yyyy")" required readonly></div>Date</td>
                    </tr>
                    <tr>
                        <td style="padding-left: 120px"></td>
                        <td></td>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <br />
    <br />

    <!--This Javascript function is active when the user clicks the Print My Logged Volunteer Hours button.-->
    <script>
        function printDiv(divName) {
                            var printContents = document.getElementById(divName).innerHTML;
                            var originalContents = document.body.innerHTML;

                            document.body.innerHTML = printContents;
                            window.print();
                            document.body.innerHTML = originalContents;
                            window.location.reload(true);
                        }
    </script>
</body>
</html>
paya